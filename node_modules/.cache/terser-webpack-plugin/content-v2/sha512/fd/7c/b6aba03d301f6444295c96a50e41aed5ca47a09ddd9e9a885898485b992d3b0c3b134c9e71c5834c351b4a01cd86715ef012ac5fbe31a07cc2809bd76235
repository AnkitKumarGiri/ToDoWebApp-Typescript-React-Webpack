{"map":"{\"version\":3,\"sources\":[\"C:\\\\Users\\\\t-anku\\\\Documents\\\\react-ts-webpack\\\\src\\\\app\\\\App.tsx\"],\"names\":[\"React\",\"__webpack_require__\",\"ReactDOM\",\"ListItem_1\",\"InputRow_1\",\"List\",\"_super\",\"props\",\"_this\",\"call\",\"this\",\"onInputChange\",\"e\",\"setState\",\"input_box_text\",\"target\",\"value\",\"toUpperCase\",\"addNewItem\",\"new_item\",\"state\",\"length\",\"todos\",\"slice\",\"concat\",\"text\",\"display\",\"refreshInput\",\"onKeyPress\",\"key\",\"onClearToDo\",\"onClearCompleted\",\"completed\",\"onSelectToDo\",\"bind\",\"onDeleteToDo\",\"onSelectCompleted\",\"onDeleteCompleted\",\"__extends\",\"prototype\",\"renderInputRow\",\"createElement\",\"default\",\"maxLength\",\"onChange\",\"placeholder\",\"onClick\",\"num\",\"render\",\"todo_list\",\"map\",\"item\",\"toString\",\"index\",\"onSelect\",\"onDelete\",\"classVal\",\"checked\",\"completed_list\",\"className\",\"Component\",\"document\",\"getElementById\"],\"mappings\":\"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\",\"sourcesContent\":[\"import * as React from 'react';\\r\\nimport * as ReactDOM from 'react-dom';\\r\\nimport './index.css';\\r\\nimport ListItem from './ListItem';\\r\\nimport InputRow from './InputRow';\\r\\n\\r\\ninterface ListState {\\r\\n    todos: {\\r\\n        text: string,\\r\\n        display: boolean\\r\\n    }[],\\r\\n    completed: {\\r\\n        text: string,\\r\\n        display: boolean\\r\\n    }[],\\r\\n    input_box_text: string,\\r\\n}\\r\\n\\r\\nclass List extends React.Component<{}, ListState> {\\r\\n\\r\\n    constructor(props: any){\\r\\n        super(props);\\r\\n        this.state = {\\r\\n           todos:[{\\r\\n            text: null,\\r\\n            display: false,\\r\\n           }],\\r\\n           completed:[{\\r\\n            text: null,\\r\\n            display: false,\\r\\n           }],\\r\\n           input_box_text: '',\\r\\n        };\\r\\n        this.onSelectToDo = this.onSelectToDo.bind(this);\\r\\n        this.onDeleteToDo = this.onDeleteToDo.bind(this);\\r\\n        this.onSelectCompleted = this.onSelectCompleted.bind(this);\\r\\n        this.onDeleteCompleted = this.onDeleteCompleted.bind(this);\\r\\n    }\\r\\n\\r\\n    onInputChange = (e: any) => {\\r\\n        this.setState({\\r\\n            input_box_text: e.target.value.toUpperCase()\\r\\n        })\\r\\n    }\\r\\n    refreshInput(){\\r\\n        this.setState({\\r\\n            input_box_text: '',\\r\\n        })\\r\\n    }\\r\\n    addNewItem = () => {\\r\\n        const  new_item = this.state.input_box_text;\\r\\n        if(new_item.length === 0) {\\r\\n            return;\\r\\n        }\\r\\n\\r\\n        const todos = this.state.todos.slice();\\r\\n        this.setState({\\r\\n            todos: todos.concat([{\\r\\n                text: new_item,\\r\\n                display: true,\\r\\n            }]),\\r\\n        })\\r\\n        this.refreshInput();\\r\\n    }\\r\\n\\r\\n    onKeyPress = (e: any) => {\\r\\n        if(e.key === 'Enter'){\\r\\n            this.addNewItem();\\r\\n        }\\r\\n    }\\r\\n    \\r\\n    renderInputRow(){\\r\\n        return (\\r\\n            <InputRow\\r\\n                maxLength = {27}\\r\\n                onChange = {this.onInputChange}\\r\\n                placeholder = {\\\"New Item...\\\"}\\r\\n                onClick = {this.addNewItem}\\r\\n                onKeyPress = {this.onKeyPress}\\r\\n                value = {this.state.input_box_text}\\r\\n            />\\r\\n        );\\r\\n    }\\r\\n    \\r\\n    onDeleteToDo(num: number){\\r\\n        const todos = this.state.todos.slice();\\r\\n        todos[num].display = false;\\r\\n        this.setState({\\r\\n            todos: todos,\\r\\n        });\\r\\n    }\\r\\n\\r\\n    onDeleteCompleted(num: number){\\r\\n        const completed = this.state.completed.slice();\\r\\n        completed[num].display = false;\\r\\n        this.setState({\\r\\n            completed: completed,\\r\\n        });\\r\\n    }\\r\\n\\r\\n    onSelectToDo(num: number){\\r\\n        const new_item = this.state.todos[num].text;\\r\\n        if(new_item.length === 0)\\r\\n            return;\\r\\n        const completed = this.state.completed.slice();\\r\\n        this.setState({\\r\\n            completed: completed.concat([{\\r\\n                text: new_item,\\r\\n                display: true,\\r\\n            }]),\\r\\n        });\\r\\n        this.onDeleteToDo(num);\\r\\n    }\\r\\n    \\r\\n    onSelectCompleted(num: number){\\r\\n        const new_item = this.state.completed[num].text;\\r\\n        if(new_item.length === 0)\\r\\n            return;\\r\\n        const todos = this.state.todos.slice();\\r\\n        this.setState({\\r\\n            todos: todos.concat([{\\r\\n                text: new_item,\\r\\n                display: true,\\r\\n            }]),\\r\\n        });\\r\\n        this.onDeleteCompleted(num);\\r\\n    }\\r\\n\\r\\n    onClearToDo = () => {\\r\\n        this.setState({\\r\\n            todos:[{\\r\\n                text: null,\\r\\n                display: false,\\r\\n               }], \\r\\n        })\\r\\n    }\\r\\n\\r\\n    onClearCompleted = () =>{\\r\\n        this.setState({\\r\\n            completed:[{\\r\\n                text: null,\\r\\n                display: false,\\r\\n               }], \\r\\n        })\\r\\n    }\\r\\n\\r\\n    render() {\\r\\n\\r\\n        const todos = this.state.todos;\\r\\n        const completed = this.state.completed;\\r\\n        \\r\\n        const todo_list = todos.map((item, num) => {\\r\\n            // console.log(item);\\r\\n            // console.log(num);\\r\\n            const text = item.text;\\r\\n            const display = item.display ? 'show list' : 'hide list';\\r\\n            const checked = false;\\r\\n            return (\\r\\n                <ListItem\\r\\n                    key = {num.toString()}\\r\\n                    index = {num}\\r\\n                    value = {text}\\r\\n                    onSelect = { this.onSelectToDo }\\r\\n                    onDelete = { this.onDeleteToDo }\\r\\n                    classVal = {display}\\r\\n                    checked = {checked}\\r\\n                />\\r\\n            )\\r\\n        });\\r\\n        \\r\\n        const completed_list = completed.map((item, num) => {\\r\\n            // console.log(item);\\r\\n            // console.log(num);\\r\\n            const text = item.text;\\r\\n            const display = item.display ? 'show list' : 'hide list';\\r\\n            const checked = true;\\r\\n            return (\\r\\n                <ListItem\\r\\n                    key = {num.toString()}\\r\\n                    index = {num}\\r\\n                    value = {text}\\r\\n                    onSelect = { this.onSelectCompleted }\\r\\n                    onDelete = { this.onDeleteCompleted }\\r\\n                    classVal = {display}\\r\\n                    checked = {checked}\\r\\n                />\\r\\n            )\\r\\n        });\\r\\n\\r\\n        return (\\r\\n            <div className = \\\"list\\\">\\r\\n                <div className = \\\"things-to-do\\\">\\r\\n                    <div className = \\\"heading\\\" >\\r\\n                        <h1> To Do List </h1>\\r\\n                    </div> \\r\\n                    {this.renderInputRow()}\\r\\n                    <ul>{todo_list}</ul>\\r\\n                    <div className = \\\"clear-list\\\">\\r\\n                        <button onClick= {this.onClearToDo}>Clear todos</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div className = \\\"done\\\">\\r\\n                    <h1> Completed List </h1>\\r\\n                    <ul>{completed_list}</ul>\\r\\n                    <div className = \\\"clear-list\\\">\\r\\n                        <button onClick= {this.onClearCompleted}>Clear Completed</button>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        )\\r\\n    }\\r\\n}\\r\\n\\r\\nReactDOM.render(\\r\\n    <List />,\\r\\n    document.getElementById('root')\\r\\n);\"]}","code":"webpackHotUpdate(0,{11:function(e,t,o){\"use strict\";var n,l=this&&this.__extends||(n=function(e,t){return(n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)},function(e,t){function o(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)});Object.defineProperty(t,\"__esModule\",{value:!0});var s=o(0),a=o(3);o(12);var i=o(16),r=o(17),c=function(e){function t(t){var o=e.call(this,t)||this;return o.onInputChange=function(e){o.setState({input_box_text:e.target.value.toUpperCase()})},o.addNewItem=function(){var e=o.state.input_box_text;if(0!==e.length){var t=o.state.todos.slice();o.setState({todos:t.concat([{text:e,display:!0}])}),o.refreshInput()}},o.onKeyPress=function(e){\"Enter\"===e.key&&o.addNewItem()},o.onClearToDo=function(){o.setState({todos:[{text:null,display:!1}]})},o.onClearCompleted=function(){o.setState({completed:[{text:null,display:!1}]})},o.state={todos:[{text:null,display:!1}],completed:[{text:null,display:!1}],input_box_text:\"\"},o.onSelectToDo=o.onSelectToDo.bind(o),o.onDeleteToDo=o.onDeleteToDo.bind(o),o.onSelectCompleted=o.onSelectCompleted.bind(o),o.onDeleteCompleted=o.onDeleteCompleted.bind(o),o}return l(t,e),t.prototype.refreshInput=function(){this.setState({input_box_text:\"\"})},t.prototype.renderInputRow=function(){return s.createElement(r.default,{maxLength:27,onChange:this.onInputChange,placeholder:\"New Item...\",onClick:this.addNewItem,onKeyPress:this.onKeyPress,value:this.state.input_box_text})},t.prototype.onDeleteToDo=function(e){var t=this.state.todos.slice();t[e].display=!1,this.setState({todos:t})},t.prototype.onDeleteCompleted=function(e){var t=this.state.completed.slice();t[e].display=!1,this.setState({completed:t})},t.prototype.onSelectToDo=function(e){var t=this.state.todos[e].text;if(0!==t.length){var o=this.state.completed.slice();this.setState({completed:o.concat([{text:t,display:!0}])}),this.onDeleteToDo(e)}},t.prototype.onSelectCompleted=function(e){var t=this.state.completed[e].text;if(0!==t.length){var o=this.state.todos.slice();this.setState({todos:o.concat([{text:t,display:!0}])}),this.onDeleteCompleted(e)}},t.prototype.render=function(){var e=this,t=this.state.todos,o=this.state.completed,n=t.map(function(t,o){var n=t.text,l=t.display?\"show list\":\"hide list\";return s.createElement(i.default,{key:o.toString(),index:o,value:n,onSelect:e.onSelectToDo,onDelete:e.onDeleteToDo,classVal:l,checked:!1})}),l=o.map(function(t,o){var n=t.text,l=t.display?\"show list\":\"hide list\";return s.createElement(i.default,{key:o.toString(),index:o,value:n,onSelect:e.onSelectCompleted,onDelete:e.onDeleteCompleted,classVal:l,checked:!0})});return s.createElement(\"div\",{className:\"list\"},s.createElement(\"div\",{className:\"things-to-do\"},s.createElement(\"div\",{className:\"heading\"},s.createElement(\"h1\",null,\" To Do List \")),this.renderInputRow(),s.createElement(\"ul\",null,n),s.createElement(\"div\",{className:\"clear-list\"},s.createElement(\"button\",{onClick:this.onClearToDo},\"Clear todos\"))),s.createElement(\"div\",{className:\"done\"},s.createElement(\"h1\",null,\" Completed List \"),s.createElement(\"ul\",null,l),s.createElement(\"div\",{className:\"clear-list\"},s.createElement(\"button\",{onClick:this.onClearCompleted},\"Clear Completed\"))))},t}(s.Component);a.render(s.createElement(c,null),document.getElementById(\"root\"))}});","extractedComments":[]}